buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.3.3.RELEASE")
    }
}

plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'pmd'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

bootJar{
	baseName = 'CardCalc'
    version =  '0.0.1'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

checkstyle {
  	ignoreFailures = true
}

pmd {
	 ignoreFailures = true
     toolVersion = "6.21.0"
     ruleSets = [
            'java-basic',            // good practices which should be followed
	        'java-braces',           // regarding the use and placement of braces
	        'java-clone',            // questionable usages of the clone() method
	        'java-codesize',         // problems related to code size or complexity
	        'java-design',           // flag suboptimal code implementations
	        'java-empty',            // empty statements of any kind
	        'java-finalizers',       // problems that can occur with finalizers
	        'java-imports',          // problems that can occur with import statements
	        'java-strictexception',  // strict guidelines about throwing and catching exceptions
	        'java-strings',          // manipulation of the String, StringBuffer, or StringBuilder instances
	        'java-sunsecure',        // check the security guidelines from Sun
	        'java-typeresolution',   // rules which resolve java Class files for comparison
	        'java-unnecessary',      // find useless or unnecessary code
	        'java-unusedcode'        // find unused or ineffective code
    ]
}

defaultTasks "clean", "build"
